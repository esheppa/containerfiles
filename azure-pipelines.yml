# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ab2bd6f5-de61-486a-937f-ca10bb4df32e'
  containerRegistry: 'eigenmode.azurecr.io'
  tag: '$(Build.BuildId)'
  #tag: 'latest'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and Push
  jobs:  
  - job: Build
    displayName: Build Images
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Login
      inputs:
        command: login
        containerRegistry: $(dockerRegistryServiceConnection)
    - task: Docker@2
      displayName: Build fedora base
      inputs:
        command: build
        repository: fedora-base
        dockerfile: '$(Build.SourcesDirectory)/fedora-base/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
#    - task: Docker@2
#      displayName: Build rust
#      inputs:
#        command: build
#        repository: rs-builder
#        dockerfile: '$(Build.SourcesDirectory)/rust/Dockerfile'
#        containerRegistry: $(dockerRegistryServiceConnection)
#        tags: |
#          $(tag)
    - task: Docker@2
      displayName: Build aws-cli
      inputs:
        command: build
        repository: aws-cli
        dockerfile: '$(Build.SourcesDirectory)/aws-cli/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        arguments: '--build-arg CONTAINER_TAG=$(tag)'
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build azure-cli
      inputs:
        command: build
        repository: azure-cli
        dockerfile: '$(Build.SourcesDirectory)/azure-cli/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build terraform
      inputs:
        command: build
        repository: terraform
        dockerfile: '$(Build.SourcesDirectory)/terraform/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
#    - task: Docker@2
#      displayName: Build mdbook
#      inputs:
#        command: build
#        repository: mdbook
#        dockerfile: '$(Build.SourcesDirectory)/mdbook/Dockerfile'
#        containerRegistry: $(dockerRegistryServiceConnection)
#        arguments: '--build-arg CONTAINER_TAG=$(tag)'
#        tags: |
#          $(tag)
    - task: Docker@2
      displayName: Build mssql-cli
      inputs:
        command: build
        repository: mssql-cli
        dockerfile: '$(Build.SourcesDirectory)/mssql-cli/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        arguments: '--build-arg CONTAINER_TAG=$(tag)'
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build neovim
      inputs:
        command: build
        repository: neovim
        dockerfile: '$(Build.SourcesDirectory)/neovim/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        arguments: '--build-arg CONTAINER_TAG=$(tag)'
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build neovim-py
      inputs:
        command: build
        repository: neovim-py
        dockerfile: '$(Build.SourcesDirectory)/neovim-py/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        arguments: '--build-arg CONTAINER_TAG=$(tag)'
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build neovim-rs
      inputs:
        command: build
        repository: neovim-rs
        dockerfile: '$(Build.SourcesDirectory)/neovim-rs/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        arguments: '--build-arg CONTAINER_TAG=$(tag)'
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build pgcli
      inputs:
        command: build
        repository: pgcli
        dockerfile: '$(Build.SourcesDirectory)/pgcli/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        arguments: '--build-arg CONTAINER_TAG=$(tag)'
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Push an image to container registry
      inputs:
        command: push
        repository: fedora-base
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Push an image to container registry
      inputs:
        command: push
        repository: neovim-base
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
#    - task: Docker@2
#      displayName: Push to container registry  rust
#      inputs:
#        command: push
#        repository: rust
#        containerRegistry: $(dockerRegistryServiceConnection)
#        tags: |
#          $(tag)
    - task: Docker@2
      displayName: Push to container registry  aws-cli
      inputs:
        command: push
        repository: aws-cli
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Push to container registry  azure-cli
      inputs:
        command: push
        repository: azure-cli
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Push to container registry  terraform
      inputs:
        command: push
        repository: terraform
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
#    - task: Docker@2
#      displayName: Push to container registry  mdbook
#      inputs:
#        command: push
#        repository: mdbook
#        containerRegistry: $(dockerRegistryServiceConnection)
#        tags: |
#          $(tag)
    - task: Docker@2
      displayName: Push to container registry  mssql-cli
      inputs:
        command: push
        repository: mssql-cli
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Push to container registry  neovim
      inputs:
        command: push
        repository: neovim
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Push to container registry  neovim-py
      inputs:
        command: push
        repository: neovim-py
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Push to container registry  neovim-rs
      inputs:
        command: push
        repository: neovim-rs
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Push to container registry  pgcli
      inputs:
        command: push
        repository: pgcli
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

